{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\itlab\\\\Desktop\\\\UPS\\\\intp\\\\src\\\\pages\\\\Shipping\\\\shipping.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Navbar from '../Navbar';\nimport Footer from '../Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Shipping() {\n  _s();\n  const [currentStatus, setCurrentStatus] = useState('');\n  const [steps, setSteps] = useState([{\n    text: 'Dispatched',\n    color: 'step step-primary'\n  }, {\n    text: 'Reached Hub1',\n    color: 'step step-primary'\n  }, {\n    text: 'Reached Hub2',\n    color: 'step'\n  }, {\n    text: 'Out for delivery',\n    color: 'step'\n  }]);\n  useEffect(() => {\n    // Replace with your API endpoint to fetch the status\n    fetch('http://172.22.81.182:8080/rfid/getstat/12') // Use your API URL\n    .then(response => response.json()).then(data => {\n      setCurrentStatus(data.status); // Assuming API response contains a 'status' field\n      updateStepColor(data.status);\n    }).catch(error => {\n      console.error('Error fetching status data:', error);\n    });\n  }, []); // No need to include updateStepColor in the dependency array\n\n  // Function to update the color of the step based on the current status\n  const updateStepColor = status => {\n    const updatedSteps = steps.map(step => {\n      if (step.text === status) {\n        step.color = 'step step-success'; // Change the color for the current status\n      } else {\n        step.color = 'step'; // Reset color for other steps\n      }\n\n      return step;\n    });\n    setSteps(updatedSteps);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex flex-col ml-5\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"steps steps-vertical\",\n        children: steps.map((step, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: step.color,\n          children: step.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"items-baseline\",\n      children: /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(Shipping, \"ff74hKv0RPNYJAGT9TGPhgPhwXE=\");\n_c = Shipping;\nvar _c;\n$RefreshReg$(_c, \"Shipping\");","map":{"version":3,"names":["React","useEffect","useState","Navbar","Footer","jsxDEV","_jsxDEV","Shipping","_s","currentStatus","setCurrentStatus","steps","setSteps","text","color","fetch","then","response","json","data","status","updateStepColor","catch","error","console","updatedSteps","map","step","children","fileName","_jsxFileName","lineNumber","columnNumber","className","index","_c","$RefreshReg$"],"sources":["C:/Users/itlab/Desktop/UPS/intp/src/pages/Shipping/shipping.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Navbar from '../Navbar';\r\nimport Footer from '../Footer';\r\n\r\nexport default function Shipping() {\r\n  const [currentStatus, setCurrentStatus] = useState('');\r\n  const [steps, setSteps] = useState([\r\n    { text: 'Dispatched', color: 'step step-primary' },\r\n    { text: 'Reached Hub1', color: 'step step-primary' },\r\n    { text: 'Reached Hub2', color: 'step' },\r\n    { text: 'Out for delivery', color: 'step' },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    // Replace with your API endpoint to fetch the status\r\n    fetch('http://172.22.81.182:8080/rfid/getstat/12') // Use your API URL\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setCurrentStatus(data.status); // Assuming API response contains a 'status' field\r\n        updateStepColor(data.status);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching status data:', error);\r\n      });\r\n  }, []); // No need to include updateStepColor in the dependency array\r\n  \r\n  \r\n\r\n  // Function to update the color of the step based on the current status\r\n  const updateStepColor = (status) => {\r\n    const updatedSteps = steps.map((step) => {\r\n      if (step.text === status) {\r\n        step.color = 'step step-success'; // Change the color for the current status\r\n      } else {\r\n        step.color = 'step'; // Reset color for other steps\r\n      }\r\n      return step;\r\n    });\r\n    setSteps(updatedSteps);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <div className=\"min-h-screen flex flex-col ml-5\">\r\n        <ul className=\"steps steps-vertical\">\r\n          {steps.map((step, index) => (\r\n            <li key={index} className={step.color}>\r\n              {step.text}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <div className='items-baseline'>\r\n        <Footer />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}