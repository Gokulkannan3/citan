{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\itlab\\\\Desktop\\\\UPS\\\\intp\\\\src\\\\pages\\\\Shipping\\\\shipping.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProgressBar = () => {\n  _s();\n  const [apiData, setApiData] = useState({\n    status: 'Dispatched'\n  });\n  useEffect(() => {\n    // Simulate fetching data from a dummy API\n    setTimeout(() => {\n      const randomStatus = Math.random() < 0.25 ? 'Dispatched' : Math.random() < 0.5 ? 'Reached Hub1' : Math.random() < 0.75 ? 'Reached Hub2' : 'Out for Delivery';\n      setApiData({\n        status: randomStatus\n      });\n    }, 2000); // Simulate API request every 2 seconds\n  }, []);\n\n  // Create an array of label texts\n  const labels = ['Dispatched', 'Reached Hub1', 'Reached Hub2', 'Out for Delivery'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"progress-bar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-labels\",\n      children: labels.map((label, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `progress-label ${apiData.status === label ? 'active' : ''}`,\n        children: label\n      }, label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `progress-bar ${apiData.status}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(ProgressBar, \"hzMlBJ7Mb5vIJdE8a8vAKheO1c4=\");\n_c = ProgressBar;\nexport default ProgressBar;\nvar _c;\n$RefreshReg$(_c, \"ProgressBar\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ProgressBar","_s","apiData","setApiData","status","setTimeout","randomStatus","Math","random","labels","className","children","map","label","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/itlab/Desktop/UPS/intp/src/pages/Shipping/shipping.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst ProgressBar = () => {\r\n  const [apiData, setApiData] = useState({ status: 'Dispatched' });\r\n\r\n  useEffect(() => {\r\n    // Simulate fetching data from a dummy API\r\n    setTimeout(() => {\r\n      const randomStatus = Math.random() < 0.25 ? 'Dispatched' :\r\n                           Math.random() < 0.5 ? 'Reached Hub1' :\r\n                           Math.random() < 0.75 ? 'Reached Hub2' :\r\n                           'Out for Delivery';\r\n\r\n      setApiData({ status: randomStatus });\r\n    }, 2000); // Simulate API request every 2 seconds\r\n  }, []);\r\n\r\n  // Create an array of label texts\r\n  const labels = ['Dispatched', 'Reached Hub1', 'Reached Hub2', 'Out for Delivery'];\r\n\r\n  return (\r\n    <div className=\"progress-bar\">\r\n      <div className=\"progress-labels\">\r\n        {labels.map((label, index) => (\r\n          <div\r\n            key={label}\r\n            className={`progress-label ${apiData.status === label ? 'active' : ''}`}\r\n          >\r\n            {label}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className={`progress-bar ${apiData.status}`} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgressBar;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC;IAAEQ,MAAM,EAAE;EAAa,CAAC,CAAC;EAEhEP,SAAS,CAAC,MAAM;IACd;IACAQ,UAAU,CAAC,MAAM;MACf,MAAMC,YAAY,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,IAAI,GAAG,YAAY,GACnCD,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,cAAc,GACpCD,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,IAAI,GAAG,cAAc,GACrC,kBAAkB;MAEvCL,UAAU,CAAC;QAAEC,MAAM,EAAEE;MAAa,CAAC,CAAC;IACtC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMG,MAAM,GAAG,CAAC,YAAY,EAAE,cAAc,EAAE,cAAc,EAAE,kBAAkB,CAAC;EAEjF,oBACEV,OAAA;IAAKW,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3BZ,OAAA;MAAKW,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAC7BF,MAAM,CAACG,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACvBf,OAAA;QAEEW,SAAS,EAAG,kBAAiBR,OAAO,CAACE,MAAM,KAAKS,KAAK,GAAG,QAAQ,GAAG,EAAG,EAAE;QAAAF,QAAA,EAEvEE;MAAK,GAHDA,KAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIP,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNnB,OAAA;MAAKW,SAAS,EAAG,gBAAeR,OAAO,CAACE,MAAO;IAAE;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAEV,CAAC;AAACjB,EAAA,CAjCID,WAAW;AAAAmB,EAAA,GAAXnB,WAAW;AAmCjB,eAAeA,WAAW;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}